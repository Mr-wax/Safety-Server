import Alert from '../Models/AlertModel.js';
import sendMail from '../Utils/SendMail.js';
import User from '../Models/UserModel.js';

export const createAlert = async (req, res) => {
    try {
      console.log('REQ.USER:', req.user); // Add this
      const { latitude, longitude, alertType, message } = req.body;
  
      if (!latitude || !longitude) {
        return res.status(400).json({ error: 'Location is required' });
      }
  
      const alert = new Alert({
        user: req.user._id,
        location: { latitude, longitude },
        alertType,
        message
      });
  
      await alert.save();

      // Send notification email to admins/security
    const emailSubject = `ðŸš¨ New ${alertType} Alert from ${req.user.firstname || req.user.email}`;
    const emailHTML = `
  <div style="font-family: Arial, sans-serif; background-color: #f8f9fa; padding: 20px; border-radius: 10px; color: #333;">
    <h2 style="color: #dc3545;">ðŸš¨ ${alertType} Alert Triggered</h2>
    
    <table style="width: 100%; margin-top: 15px; font-size: 15px;">
      <tr>
        <td style="padding: 8px; font-weight: bold; color: #495057;">User:</td>
        <td style="padding: 8px;">${req.user.firstname || req.user.firstname || ''} ${req.user.lastname || req.user.lastname || ''}</td>
      </tr>
      <tr style="background-color: #e9ecef;">
        <td style="padding: 8px; font-weight: bold; color: #495057;">Email:</td>
        <td style="padding: 8px;"><a href="mailto:${req.user.email}" style="color: #007bff;">${req.user.email}</a></td>
      </tr>
      <tr>
        <td style="padding: 8px; font-weight: bold; color: #495057;">Location:</td>
        <td style="padding: 8px;">
          <a href="https://maps.google.com/?q=${latitude},${longitude}" target="_blank" style="color: #28a745;">
            View on Google Maps
          </a>
        </td>
      </tr>
      <tr style="background-color: #e9ecef;">
        <td style="padding: 8px; font-weight: bold; color: #495057;">Message:</td>
        <td style="padding: 8px;">${message || "No message provided"}</td>
      </tr>
    </table>

    <p style="margin-top: 25px; font-size: 13px; color: #6c757d;">
      This alert was automatically generated by the <strong>Safety App</strong>. Please respond immediately.
    </p>
  </div>
`;

    await sendMail('ponwaxxx@gmail.com', emailSubject, emailHTML);

    // Notify user's saved emergency contacts (if any)
    for (const contact of req.user.emergencyContacts || []) {
      const html = `
        <div style="font-family: Arial, sans-serif; background-color: #f0f4f8; padding: 20px; border-radius: 10px; color: #333;">
          <h2 style="color: #e63946;">ðŸš¨ Emergency Alert</h2>
          <p>Hi <strong>${contact.name}</strong>,</p>
          <p><strong>${req.user.firstname || ''} ${req.user.lastname || ''}</strong> has triggered an emergency alert on the Safety platform.</p>
          <table style="width: 100%; margin-top: 15px; font-size: 15px; border-collapse: collapse;">
            <tr>
              <td style="padding: 8px; font-weight: bold;">Alert Type:</td>
              <td style="padding: 8px;">${alertType}</td>
            </tr>
            <tr style="background-color: #e9ecef;">
              <td style="padding: 8px; font-weight: bold;">Email:</td>
              <td style="padding: 8px;"><a href="mailto:${req.user.email}" style="color: #007bff;">${req.user.email}</a></td>
            </tr>
            <tr>
              <td style="padding: 8px; font-weight: bold;">Location:</td>
              <td style="padding: 8px;"><a href="https://maps.google.com/?q=${latitude},${longitude}" target="_blank" style="color: #28a745;">View on Google Maps</a></td>
            </tr>
            <tr style="background-color: #e9ecef;">
              <td style="padding: 8px; font-weight: bold;">Message:</td>
              <td style="padding: 8px;">${message || "No message provided"}</td>
            </tr>
          </table>
          <p style="margin-top: 25px; font-size: 13px; color: #6c757d;">This message was automatically generated by the <strong>Safety App</strong>. Please try to contact them or take appropriate action immediately.</p>
        </div>
      `;
      await sendMail(contact.email, `ðŸš¨ ${alertType} Alert from ${req.user.firstname}`, html);
    }

    // Broadcast to all users via email
    const allUsers = await User.find({}, 'email firstname lastname');
    const recipientEmails = allUsers.map(u => u.email).filter(Boolean);
    if (recipientEmails.length > 0) {
      const publicSubject = `ðŸš¨ ${alertType} Alert - ${req.user.firstname || ''} ${req.user.lastname || ''}`;
      const publicHTML = emailHTML; // reuse main template
      // Send emails sequentially to avoid provider limits; swap to bulk if needed
      for (const email of recipientEmails) {
        try {
          await sendMail(email, publicSubject, publicHTML);
        } catch (e) {
          console.error('Broadcast email failed for', email, e.message);
        }
      }
    }

      res.status(201).json({ message: 'Alert sent successfully', alert });
    } catch (err) {
      console.error('ALERT ERROR:', err.message); // Add this
      res.status(500).json({ error: 'Server error' });
    }
  };
  
export const getAllAlerts = async (req, res) => {
  try {
    const alerts = await Alert.find().populate('user', 'firstname lastname email');
    res.status(200).json(alerts);
  } catch (error) {
    res.status(500).json({ error: 'Server error' });
  }
};
